SELECT :- THIS COMMAND IS MEANT FOR RETIVING DATA FROM SINGLE OR MULTIPLE TABLES.

SELECT  <EXPRESSION>  FROM <TABLE NAME> 
[WHERE CLAUSE]
[GROUP BY CLAUSE]
[HAVING CLAUSE]
[SUB QUERY CLAUSE]
[ORDER BY CLAUSE]

SELECT * FROM EMP;  //* REPRESENT'S ALL COLUMNS

SELECT ENAME, JOB, SAL FROM EMP;  // RETRIVES SPECIFIC COLUMNS DATA

SELECT STATEMENT WILL ALLOWS TO PERFORM CALCULATIONS ON TABLE COLUMNS.

SELECT ENAME, JOB, SAL, SAL*12 FROM EMP;

COLUMN ALIAS :-  HERE WE CAN GIVE ALIAS NAME FROM COLUMNS OR EXPRESSIONS  TEMP.

SELECT  COL/EXPRESSION AS ALIAS NAME, .......

SELECT ENAME AS EMPLOYEE_NAME, JOB AS DESIGNATION, SAL AS SALARY, 
SAL*12 AS ANNUAL_SAL FROM EMP;
-------------------------------------------------------
DISTINCT CLAUSE :- IT IS USED TO RETRIVE ACTUAL VALUES FROM SPECIFIED COL BY AVODING DUPLICATE VALUES.

SELECT DISTINCT  <COL NAME>  FROM <TABLE NAME>;

SELECT DISTINCT JOB FROM EMP;

SELECT DISTINCT DEPTNO FROM EMP;
-------------------------------------------------------------------
WHERE CLAUSE :-  TO SPECIFIY CONDITIONS ON TABLE COLUMNS  FOR RETRIVAL OF SPECIFIC ROWS.
SELECT .... FROM <TABLE NAME>   WHERE COLNAME <OPERATOR> <VALUE>

SELECT * FROM EMP WHERE JOB='MANAGER';

SELECT ENAME, SAL, JOB FROM EMP WHERE SAL>=7000;

SQL OPERATORS :-  
BETWEEN, IN, LIKE, IS

BETWEEN  :-  IT IS MEANT FOR SPECIFING CONDITION ON RANGE OF VALUES ON NUMERIC COL.

SELECT ENAME, JOB, SAL FROM EMP WHERE SAL>=7000 AND SAL<=9000;

(OR)

SELECT ENAME, JOB, SAL FROM EMP WHERE SAL BETWEEN 7000 AND 9000;

SHOW ALL EMP WHO ARE WORKING DEPTNO 10 OR 20

SELECT ENAME,JOB,SAL, DEPTNO FROM EMP WHERE DEPTNO = 10  OR DEPTNO = 20;

IN() :- IT IS USED ALTERNATIVE FOR "or"  WHEN SPECIFING CONDITIONS ON SINGLE COL. 
SELECT ENAME,JOB,SAL, DEPTNO FROM EMP WHERE DEPTNO IN (10,20);

IS :-  IT IS MEANT FOR HANDLING NULL VALUES IN COLUMNS. 

SHOW ALL EMP WHO ARE NOT GETTING COMMISSION
SELECT * FROM EMP WHERE COMM IS NULL;

SHOW ALL EMP WHO ARE GETTING COMMISSION
SELECT * FROM EMP WHERE COMM IS NOT NULL;

LIKE :-  IT IS USED TO SPECIFY CONDITIONS ON STRING OR DATE VALUES IN FORM OF PATTERNS.
HERE FOLLOW  TWO SYMBOLS ARE USED

% = IGNORE GROUP OF CHARACTERS
SELECT * FROM EMP WHERE ENAME LIKE 'V%';  // STARTS WITH 'V'

SELECT * FROM EMP WHERE ENAME LIKE '%A';  // ENDS WITH 'A'

SELECT * FROM EMP WHERE ENAME LIKE '%N%';  // EXIST 'N' ANY POSITION

SELECT * FROM EMP WHERE HIREDATE LIKE '%2002%';

_(UNDERSCORE) = IGNORE SINGLE CHARACTER

SELECT * FROM EMP WHERE ENAME LIKE '_A%';  //SECOND LETTER IS 'A'

SELECT * FROM EMP WHERE ENAME LIKE '_A_E%';
					 // SECOND LETTER IS 'A' AND FOURTH LETER IS 'E'
SELECT * FROM EMP WHERE ENAME LIKE '_____'; // 
---------------------------------------------------------------------------------------
DISPLAY ALL EMPLOYEE'S  WORKING IN DEPT 10 OR 20  AND THEIR JOB IS DEVELOPER

SELECT * FROM EMP WHERE DEPTNO IN(10,20) AND JOB= 'DEVELOPER';
-------------------------------------------------------------------------------
AGGRIGATE FUNCTIONS / GROUP FUNCTIONS:-
THESE FUNCTIONS WILL RETURN ONLY ONE VALUE FROM SPECIFIED COLUMN(NUMERIC COLUMNS);

SUM(COL) :- TO FIND SUM VALUE
MAX(COL) :- TO FIND MAX VAL
MIN(COL) :-  TO FIND MIN VAL
AVG(COL) :-  TO FIND AVGERAGE VAL
COUNT(COL) :-  TO COUNT NO OF VALUES IN COL
COUNT(*) :-  TO COUNT NO OF ROWS IN A TABLE

WHILE USING THESE FUNCTIONS, NO COLUMN IS USED INDEPENDENTLY. 

GROUP BY :-  IT IS USED TO MAKE SUB GROUP BASED ON SPECIFIC COLUMN. 

SELECT MAX(SAL) FROM EMP GROUP BY DEPTNO;
SELECT DEPTNO, MAX(SAL) FROM EMP GROUP BY DEPTNO;

SELECT MAX(SAL) FROM EMP GROUP BY JOB;
SELECT JOB, MAX(SAL) FROM EMP GROUP BY JOB;

HAVING :-  IT IS ALSO MENAT FOR SPECIFING CONDITIONS BUT ON GROUP FUNCTIONS.
THE DIFFERENCE B/W WHERE AND HAVING IS,  
WHERE CLAUSE ALLOWS TO SPECIFY CONDITIONS ON COL
HAVING CLAUSE ALLOWS TO SPECIFY CONDITIONS ON GROUP FUNCTIONS

HAVING CLAUSE WILL BE USED ALONG WITH GROUP BY CLAUSE. 

QUERY :- 
DISPLAY ALL MAX SAL'S  OF JOB TYPE, THEIR MAX SAL>=9000

SELECT JOB, MAX(SAL) FROM EMP GROUP BY JOB;
SELECT JOB, MAX(SAL) FROM EMP GROUP BY JOB HAVING MAX(SAL)>9000;
---------------------------------------------------------------------------------------
ORDER BY CLAUSE :-  IT ALLOWS TO DISPLAY ROWS EITHER IN ASENDING OR DESENDING ORDER OF SPECIFIC COLUMN.

THIS CLAUSE IS THE LAST CLAUSE OF THE SELECT STATEMENT. 

SELECT * FROM EMP ORDER BY ENAME ASC;

SELECT * FROM EMP ORDER BY ENAME DESC;
-------------------------------------------------------------------------------------

CREATE  TABLE TEST1(SNO INT PRIMARY KEY, SNAME VARCHAR(20), LOC VARCHAR(10) DEFAULT 'HYD');

INSERT INTO TEST1(SNO, SNAME) VALUES(1, 'KIRAN'),(2, 'KARAN');

INSERT INTO TEST1(SNO, SNAME,LOC) VALUES(3, 'KOMALI', 'DELHI'),(4, 'KALYANI', 'PUNE');
-----------------------------------------------------------------------------------------
SUB QUERY :-  A query within another query.
As per select:-  sub query should be written in where clause of main query. 

why :-  to generalize  a query,  while specifing conditions, should not use constant value. 

SELECT  ...... FROM <TABLE NAME>  WHERE <COL><OPERATOR> (SELECT STMT)

1. SUB QUERY SHOULD RETURN SINGLE VALUE/ SINGLE COLUMN VALUES BASED ON OPERATOR. 

display emp details who are getting highest sal.

SELECT * FROM EMP WHERE SAL = (SELECT MAX(SAL) FROM EMP);

HOW TO FIND SECOND MAX SAL 

SELECT MAX(SAL) FROM EMP WHERE SAL<(SELECT MAX(SAL) FROM EMP);

SECOND MAX SAL EMPLOYEE DETAILS

SELECT * FROM EMP WHERE SAL = (SELECT MAX(SAL) FROM EMP WHERE SAL<(SELECT MAX(SAL) FROM EMP));
----------------------------------------------------------------------------------------